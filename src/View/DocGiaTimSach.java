/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.DBConnection;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;


public class DocGiaTimSach extends javax.swing.JFrame {

    public static String MADOCGIA ;
    DefaultTableModel dm;
    int error = -1;
    boolean checkFirstColumn = false; 
    public DocGiaTimSach(String madocgia) {
        initComponents();
        setTitle("Tìm Kiếm Sách - Phần mềm quản lí thư viện");
        setExtendedState(MAXIMIZED_BOTH);
        this.setVisible(true);
        refreshSachTable();
        refreshQuyenTable();
        this.MADOCGIA = madocgia;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SachTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        QuyenTable = new javax.swing.JTable();
        jTextField_MaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTextField_TenSach = new javax.swing.JTextField();
        jTextField_Gia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField_Nxb = new javax.swing.JTextField();
        jTextField_SoTrang = new javax.swing.JTextField();
        jTextField_TheLoai = new javax.swing.JTextField();
        jTextField_TacGia = new javax.swing.JTextField();
        jTextField_NamXb = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonRefresh = new javax.swing.JButton();
        buttonTimKiem = new javax.swing.JButton();
        buttonLogout = new javax.swing.JButton();
        buttonTurnBack = new javax.swing.JButton();
        buttonClearText = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SachTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Tên Sách", "Giá (VNĐ)", "Nhà Xuất Bản", "Năm Xuất Bản", "Tác Giả", "Thể Loại", "Số Trang"
            }
        ));
        SachTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                SachTableMouseReleased(evt);
            }
        });
        SachTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SachTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(SachTable);

        QuyenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Sách", "Mã Quyển", "Ngày Nhập", "Trạng Thái"
            }
        ));
        QuyenTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                QuyenTableMouseReleased(evt);
            }
        });
        QuyenTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                QuyenTableKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(QuyenTable);

        jLabel3.setText("Mã Sách");

        jLabel1.setText("Tên Sách");
        jLabel1.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel1.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel1.setPreferredSize(new java.awt.Dimension(40, 14));

        jLabel2.setText("Giá (VNĐ)");
        jLabel2.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel2.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel2.setPreferredSize(new java.awt.Dimension(40, 14));

        jLabel4.setText("Nhà xuất bản");
        jLabel4.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel4.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel4.setPreferredSize(new java.awt.Dimension(40, 14));

        jLabel5.setText("Năm xuất bản");
        jLabel5.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel5.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel5.setPreferredSize(new java.awt.Dimension(40, 14));

        jLabel6.setText("Tác giả");
        jLabel6.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel6.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel6.setPreferredSize(new java.awt.Dimension(40, 14));

        jLabel8.setText("Thể loại");

        jLabel7.setText("Số trang");
        jLabel7.setMaximumSize(new java.awt.Dimension(40, 14));
        jLabel7.setMinimumSize(new java.awt.Dimension(40, 14));
        jLabel7.setPreferredSize(new java.awt.Dimension(40, 14));

        buttonRefresh.setText("Refresh");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        buttonTimKiem.setText("Tìm kiếm");
        buttonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTimKiemActionPerformed(evt);
            }
        });

        buttonLogout.setText("Đăng xuất");
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });

        buttonTurnBack.setText("Back");
        buttonTurnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTurnBackActionPerformed(evt);
            }
        });

        buttonClearText.setText("Xóa chữ");
        buttonClearText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearTextActionPerformed(evt);
            }
        });

        jLabel10.setText("jLabel9");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 841, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_Nxb, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(49, 49, 49)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextField_TheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField_SoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(23, 23, 23)
                                                .addComponent(jTextField_NamXb, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField_TenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(48, 48, 48)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(23, 23, 23)
                                                .addComponent(jTextField_TacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(buttonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(buttonTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(buttonClearText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(200, 200, 200)
                                        .addComponent(buttonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(10, 10, 10)
                                        .addComponent(buttonTurnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(141, 141, 141)))
                .addContainerGap(59, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField_MaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jTextField_NamXb, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_TenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jTextField_TacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField_Gia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jTextField_Nxb, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jTextField_TheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(jTextField_SoTrang, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonRefresh)
                    .addComponent(buttonTimKiem))
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(buttonClearText))
                    .addComponent(buttonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTurnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(159, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SachTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SachTableMouseReleased
        getNoiDungtuSachTable();
        chiTietSach();
    }//GEN-LAST:event_SachTableMouseReleased

    private void SachTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SachTableKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            getNoiDungtuSachTable();
            chiTietSach();
        }
    }//GEN-LAST:event_SachTableKeyReleased

    private void QuyenTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_QuyenTableMouseReleased
        
    }//GEN-LAST:event_QuyenTableMouseReleased

    private void QuyenTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuyenTableKeyReleased
        
    }//GEN-LAST:event_QuyenTableKeyReleased

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        // TODO add your handling code here:
        refreshSachTable();
        resetTable(QuyenTable);
        refreshQuyenTable();
        jLabel10.setText("");
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void buttonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTimKiemActionPerformed
        searchSach(getNoiDungTextField(0));
    }//GEN-LAST:event_buttonTimKiemActionPerformed

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        LoginForm newlogin = new LoginForm();
        newlogin.showWindows();
    }//GEN-LAST:event_buttonLogoutActionPerformed

    private void buttonTurnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTurnBackActionPerformed
        // TODO add your handling code here:
        this.dispose();
        DocGiaForm newDocGiaForm = new DocGiaForm(MADOCGIA);
        newDocGiaForm.showWindows();
    }//GEN-LAST:event_buttonTurnBackActionPerformed

    private void buttonClearTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearTextActionPerformed
        // TODO add your handling code here:
        setNoiDungTextField(new String[] {"","","","","","","",""});
    }//GEN-LAST:event_buttonClearTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DocGiaTimSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DocGiaTimSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DocGiaTimSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DocGiaTimSach.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DocGiaTimSach(MADOCGIA).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable QuyenTable;
    private javax.swing.JTable SachTable;
    private javax.swing.JButton buttonClearText;
    private javax.swing.JButton buttonLogout;
    private javax.swing.JButton buttonRefresh;
    private javax.swing.JButton buttonTimKiem;
    private javax.swing.JButton buttonTurnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField_Gia;
    private javax.swing.JTextField jTextField_MaSach;
    private javax.swing.JTextField jTextField_NamXb;
    private javax.swing.JTextField jTextField_Nxb;
    private javax.swing.JTextField jTextField_SoTrang;
    private javax.swing.JTextField jTextField_TacGia;
    private javax.swing.JTextField jTextField_TenSach;
    private javax.swing.JTextField jTextField_TheLoai;
    // End of variables declaration//GEN-END:variables

    public void showWindows(){
		//this.setSize(600,600);
		this.setDefaultCloseOperation(EXIT_ON_CLOSE);
		this.setResizable(false);
		this.setLocationRelativeTo(null);
		this.setVisible(true);
	}

    private void getNoiDungtuSachTable() {
        int i = SachTable.getSelectedRow();
        TableModel model = (TableModel) SachTable.getModel();
        String[] input = new String[8];
        for(int j = 0; j<8; j++){
        input[j] = model.getValueAt(i, j).toString();
        }
        
        setNoiDungTextField(input);
    }

    private void refreshSachTable() {
        try {
            dm = (DefaultTableModel) SachTable.getModel();
            resetTable(SachTable);
            String sqlQuerty = "SELECT * FROM Sach ;";
            DBConnection dbRefreshTable = new DBConnection();
            dbRefreshTable.getConnection();
            dbRefreshTable.excuteQuery(sqlQuerty);
            System.out.println(sqlQuerty);
            while (dbRefreshTable.result.next()) {

                String[] rowData = {dbRefreshTable.result.getString("MaSach"), dbRefreshTable.result.getString("TenSach"), dbRefreshTable.result.getString("Gia"), dbRefreshTable.result.getString("Nxb"), dbRefreshTable.result.getString("NamXB"), dbRefreshTable.result.getString("TacGia"), dbRefreshTable.result.getString("TheLoai"), dbRefreshTable.result.getString("SoTrang")};

                dm.addRow(rowData);

            }
            dbRefreshTable.freeConnection();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +RefreshSachTable", "ERROR", 2);
        }
        jLabel10.setText("");
    }
    
    

    private void refreshQuyenTable() {
        try {
            dm = (DefaultTableModel) QuyenTable.getModel();
            resetTable(QuyenTable);
            String sqlQuerty = "SELECT * FROM ChiTietSach ;";
            DBConnection dbRefreshTable = new DBConnection();
            dbRefreshTable.getConnection();
            dbRefreshTable.excuteQuery(sqlQuerty);
            System.out.println(sqlQuerty);
            while (dbRefreshTable.result.next()) {

                String[] rowData = {dbRefreshTable.result.getString("MaSach"), dbRefreshTable.result.getString("MaQuyen"), dbRefreshTable.result.getString("NgayNhap"), dbRefreshTable.result.getString("TrangThai")};

                dm.addRow(rowData);

            }
            dbRefreshTable.freeConnection();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +RefreshQuyenTable", "ERROR", 2);
        }
    }

    private void resetTable(JTable table) {
        dm = (DefaultTableModel) table.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    private void chiTietSach(){
        String[] input = new String[4];
        input[0] = jTextField_MaSach.getText();
        input[1] = "";
        input[2] = "";
        input[3] = "";
        error = -1;
        checkInputQuyen(2,input);
        //System.out.println(error);
        if(error == -1)
        { searchQuyen(0,input);}
    
    }
    
    public void searchQuyen(int searchType, String[] input) {//searchType =1 : Tim Kiem Quyen, searchType = 0 : tim nhung ko bao loi
        try {
            resetTable(QuyenTable);
            refreshQuyenTable();
            if (checkInputQuyen(0, input)){
                String[] sqlInput = setSqlInputQuyen(1, input);
                String sqlSearch = "SELECT * FROM ChiTietSach WHERE " + sqlInput[0] + sqlInput[1] + sqlInput[2] + sqlInput[3] +";";

                DBConnection SearchQuyen = new DBConnection();
                SearchQuyen.getConnection();
                System.out.println(sqlSearch);
                SearchQuyen.excuteQuery(sqlSearch);

                if(SearchQuyen.result.next() == false && searchType == 1) {
                   JOptionPane.showMessageDialog(null, "Không có quyển nào cả!!!");
                }
                else {
                    dm = (DefaultTableModel)QuyenTable.getModel();
                    resetTable(QuyenTable);
                    SearchQuyen.result.beforeFirst();
                    while(SearchQuyen.result.next()) {
                    String[] rowData = {SearchQuyen.result.getString("MaSach"), SearchQuyen.result.getString("MaQuyen"), SearchQuyen.result.getString("NgayNhap"), SearchQuyen.result.getString("TrangThai")};

                    dm.addRow(rowData);
                    
                }
            }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +buttonTimKiemQuyen", "ERROR", 2);
        } finally {

            
        }
    }
    
    public boolean checkInputQuyen(int checkType, String[] input) { // false : có lỗi, true : không có lỗi
        // checkType = 0 : check của Tìm kiếm quyen
        // checkType = 1 : check của Thêm quyen hoặc Chỉnh sửa quyen
        // checkType = 2 : check lấy error
        
        if (input[0].equals("") && input[1].equals("") && input[2].equals("") && input[3].equals("") ) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập thông tin nào!!");
            error = 0;
            return false;
        }
        if (input[1].equals("") &&  checkType == 1){
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập mã quyển!!");
            return false;
        }
        if (input[0].equals("") &&  checkType == 1){
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập mã sách!!");
            return false;
        }
        if (!Model.ThuVien.checkValidDate(input[2]) && !input[2].equals("")) {
            JOptionPane.showMessageDialog(null, "Thông tin Ngày Nhập bạn nhập không hợp lệ!!");
            return false;
        }
        
        if (checkMaQuyen(input[1]) && !input[1].equals("") &&  checkType == 1) {
            JOptionPane.showMessageDialog(null, "Thông tin mã quyển bạn nhập đã tồn tại. Vui lòng nhập mã quyển khác!!");
            return false;
        }
       if (!checkMaSach(input[0]) && !input[0].equals("") &&  checkType == 1) {
            JOptionPane.showMessageDialog(null, "Thông tin mã sách bạn nhập chưa tồn tại. Vui lòng tạo 1 đầu sách mới!!");
            return false;
        }
       return true; // Không có lỗi
        }
        private boolean checkMaQuyen(String MaQuyen) {
        // true tương ứng với Mã Quyển đã tồn tại
        // false tương ứng với Mã Quyển chưa tồn tại

        String sqlCheckMaQuyen = "SELECT * FROM ChiTietSach WHERE (MaQuyen = '" + MaQuyen + "');";
        DBConnection checkMaQuyen = new DBConnection();
        checkMaQuyen.getConnection();
        checkMaQuyen.excuteQuery(sqlCheckMaQuyen);
        boolean rs = true;
        try {
            rs = checkMaQuyen.result.next();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +checkMaQuyen", "ERROR", 2);
        }
        checkMaQuyen.freeConnection();
        return (rs);
    }
    private boolean checkMaSach(String MaSach) {
        // true tương ứng với Mã Sách đã tồn tại
        // false tương ứng với Mã Sách chưa tồn tại

        String sqlCheckMaSach = "SELECT * FROM Sach WHERE (MaSach = '" + MaSach + "');";
        DBConnection checkMaSach = new DBConnection();
        checkMaSach.getConnection();
        checkMaSach.excuteQuery(sqlCheckMaSach);
        boolean rs = true;
        try {
            rs = checkMaSach.result.next();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +checkMaSach", "ERROR", 2);
        }
        checkMaSach.freeConnection();
        return (rs);
    }

    public String[] setSqlInputSach(int setType, String[] input){
        //setType = 0 : câu lênh sql chỉnh sửa, setType = 1 : câu lênh sql tìm kiếm
        String[] sqlInput = new String[8];
        checkFirstColumn = false;
        String link = "";
        if(setType == 1) link = " AND ";
        if(setType == 0) link = " , ";

        if (input[0].equals("")) sqlInput[0] = "";
        else {
            sqlInput[0] = "MaSach = '" + input[0] + "'";
            checkFirstColumn = true;
        }
        if (input[1].equals("")) sqlInput[1] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[1] = link + "TenSach = '" + input[1] + "'";
            } else {
                sqlInput[1] = "TenSach = '" + input[1] + "'";
                checkFirstColumn = true;
            }
        }
        if (input[2].equals("")) sqlInput[2] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[2] = link + "Gia = " + input[2];
            } else {
                sqlInput[2] = "Gia = " + input[2];
                checkFirstColumn = true;
            }
        }
        if (input[3].equals("")) sqlInput[3] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[3] = link + "Nxb = '" + input[3] + "'";
            } else {
                sqlInput[3] = "Nxb = '" + input[3] + "'";
                checkFirstColumn = true;
            }
        }
        if (input[4].equals("")) sqlInput[4] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[4] = link + "NamXB = " + input[4];
            } else {
                sqlInput[4] = "NamXB = " + input[4];
                checkFirstColumn = true;
            }
        }
        if (input[5].equals("")) sqlInput[5] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[5] = link + "TacGia = '" + input[5] + "' ";
            } else {
                sqlInput[5] = "TacGia = '" + input[5] + "' ";
                checkFirstColumn = true;
            }
        }
        if (input[6].equals("")) sqlInput[6] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[6] = link + "TheLoai = '" + input[6] + "' ";
            } else {
                sqlInput[6] = "TheLoai = '" + input[6] + "' ";
                checkFirstColumn = true;
            }
        }
        if (input[7].equals("")) sqlInput[7] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[7] = link + "SoTrang = " + input[7];
            } else {
                sqlInput[7] = "SoTrang = " + input[7];
            }
        }

        return sqlInput;
    }
    public String[] setSqlInputQuyen(int setType, String[] input){
        //setType = 0 : câu lênh sql chỉnh sửa, setType = 1 : câu lênh sql tìm kiếm
        checkFirstColumn = false;
        String[] sqlInput = new String[4];
        String link = "";
        if(setType == 1) link = " AND ";
        if(setType == 0) link = " , ";

        if (input[0].equals("")) sqlInput[0] = "";
        else {
            sqlInput[0] = "MaSach = '" + input[0] + "'";
            checkFirstColumn = true;
        }
        if (input[1].equals("")) sqlInput[1] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[1]  = link + "MaQuyen = '" + input[1] + "'";
            } else {
                sqlInput[1]  = "MaQuyen = '" + input[1] + "'";
                checkFirstColumn = true;
            }
        }
        if (input[2].equals("")) sqlInput[2] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[2] = link + "NgayNhap = '" + input[2] + "'";
            } else {
                sqlInput[2] = "NgayNhap = '" + input[2] + "'";
                checkFirstColumn = true;
            }
        }
        if (input[3].equals("")) sqlInput[3] = "";
        else {
            if (checkFirstColumn) {
                sqlInput[3] = link + "TrangThai = '" + input[3] + "'";
            } else {
                sqlInput[3] = "TrangThai = '" + input[3] + "'";
            }
        }
        return sqlInput;

    }
    

    public void setNoiDungTextField(String[] input) { 
       
        jTextField_MaSach.setText(input[0]);
        jTextField_TenSach.setText(input[1]);
        jTextField_Gia.setText(input[2]);
        jTextField_Nxb.setText(input[3]);
        jTextField_NamXb.setText(input[4]);
        jTextField_TacGia.setText(input[5]);
        jTextField_TheLoai.setText(input[6]);
        jTextField_SoTrang.setText(input[7]);
        

    }
    
    private void searchSach(String[] input) {
         try {
            resetTable(QuyenTable);
            if (checkInputSach(0, input)){
                
                
                String[] sqlInput = setSqlInputSach(1, input);
                String sqlSearch = "SELECT * FROM Sach WHERE ";
                for(int i = 0; i<8 ; i++) {
                sqlSearch += sqlInput[i];
                }
                sqlSearch += ";";
                
                DBConnection SearchSach = new DBConnection();
                SearchSach.getConnection();
                System.out.println(sqlSearch);
                SearchSach.excuteQuery(sqlSearch);
                int soSach = 0;
                while (SearchSach.result.next()) {
                soSach++;
                }
                 
                 if(soSach == 0) { JOptionPane.showMessageDialog(null, "Không có quyển sách nào cả!!!");}
                 else {
                     jLabel10.setText("Có " +soSach +" bản ghi được tìm thấy");
                    dm = (DefaultTableModel)SachTable.getModel();
                    resetTable(SachTable);
                    SearchSach.result.beforeFirst();
                    String[] maSach = new String[soSach];
                    while(SearchSach.result.next()){
                    String[] rowData = {SearchSach.result.getString("MaSach"), SearchSach.result.getString("TenSach"), SearchSach.result.getString("Gia"), SearchSach.result.getString("Nxb"), SearchSach.result.getString("NamXB"), SearchSach.result.getString("TacGia"), SearchSach.result.getString("TheLoai"), SearchSach.result.getString("SoTrang")};
                    dm.addRow(rowData);
                    }
                    
                }
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Đã có lỗi xảy ra +searchSach", "ERROR", 2);
        } finally {
            
            resetTable(QuyenTable);
            refreshQuyenTable();
        }
    }
    
    public boolean checkInputSach(int checkType, String[] input) { // false : có lỗi, true : không có lỗi
        // checkType = 0 : check của Tìm kiếm sách
        // checkType = 1 : check của Thêm sách hoặc Chỉnh sửa sách
        // checkType = 2 : check lấy error
        
        boolean check = false;
        for(int i = 0; i<8; i++){
        if(!input[i].equals("")) check = true;
        }
        if (check == false ) {
            if(checkType != 2 ) JOptionPane.showMessageDialog(null, "Bạn chưa nhập thông tin nào!!");
            error = 0;
            return false;
        }
        if (input[0].equals("") &&  checkType != 0){
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập mã sách!!");
            return false;
        }
        if (input[1].equals("") &&  checkType != 0){
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập tên sách!!");
            return false;
        }
        
        if (!Model.ThuVien.checkNumeric(input[2]) && !input[2].equals("")) {
            JOptionPane.showMessageDialog(null, "Thông tin Giá bạn nhập không hợp lệ!!");
            return false;
        }
        if (!Model.ThuVien.checkNumeric(input[4]) && !input[4].equals("")) {
            JOptionPane.showMessageDialog(null, "Thông tin Năm xuất bản bạn nhập không hợp lệ!!");
            return false;
        }
        if (!Model.ThuVien.checkNumeric(input[7]) && !input[7].equals("")) {
            JOptionPane.showMessageDialog(null, "Thông tin Số trang bạn nhập không hợp lệ!!");
            return false;
        }
        return true;
    }
    
    private String[] getNoiDungTextField(int getType){ //getType = 0 : Sach, getType = 1 : quyen
    if(getType == 0){
    String[] NoiDungTextField = new String[8];
        NoiDungTextField[0] = jTextField_MaSach.getText().trim();
        NoiDungTextField[1] = jTextField_TenSach.getText().trim();
        NoiDungTextField[2] = jTextField_Gia.getText().trim();
        NoiDungTextField[3] = jTextField_Nxb.getText().trim();
        NoiDungTextField[4] = jTextField_NamXb.getText().trim();
        NoiDungTextField[5] = jTextField_TacGia.getText().trim();
        NoiDungTextField[6] = jTextField_TheLoai.getText().trim();
        NoiDungTextField[7] = jTextField_SoTrang.getText().trim();
        return NoiDungTextField;
    }
    
        return null;
    }

    
    
}
